imdsTrain = imageDatastore('train_cropped_images', ...
    'IncludeSubfolders',true, ...
    'LabelSource','foldernames');
imdsTest1 = imageDatastore('H:\Seagate\Kankana\Data\ChaLearn_IsoGD\valid_frames\static_depth_of', ...
    'IncludeSubfolders',true, ...
    'LabelSource','foldernames');
tbl = countEachLabel(imdsTrain);
minSetCount = min(tbl{:,2}) 
imdsTrain = splitEachLabel(imdsTrain, minSetCount, 'randomize');
[imdsTrain,imdsValidation] = splitEachLabel(imdsTrain,0.9);
net = vgg16;
inputSize = net.Layers(1).InputSize;
layersTransfer = net.Layers(1:end-9);
numClasses = numel(categories(imdsTrain.Labels));
layers = [
    layersTransfer
    averagePooling2dLayer(7,'Stride',7)
    fullyConnectedLayer(numClasses,'WeightLearnRateFactor',20,'BiasLearnRateFactor',20)
    softmaxLayer
    classificationLayer];
pixelRange = [-30 30];
imageAugmenter = imageDataAugmenter( ...
    'RandXReflection',false, ...
    'RandXTranslation',pixelRange, ...
    'RandYTranslation',pixelRange);
augimdsTrain = augmentedImageDatastore(inputSize(1:2),imdsTrain, ...
    'DataAugmentation',imageAugmenter,'ColorPreprocessing','gray2rgb');
augimdsValidation = augmentedImageDatastore(inputSize(1:2),imdsValidation,'ColorPreprocessing','gray2rgb');
options = trainingOptions('sgdm', ...
    'MiniBatchSize',64, ...
    'MaxEpochs',50, ...
    'InitialLearnRate',1e-4, ...
    'Shuffle','every-epoch', ...
    'ValidationFrequency',50, ...
    'ValidationData',augimdsValidation,...
    'Verbose',false, ...
    'Plots','training-progress');
netTransfer = trainNetwork(augimdsTrain,layers,options);
save('trainedVGG16.mat','netTransfer');
imdsTest = imageDatastore('test_cropped_images', ...
    'IncludeSubfolders',true, ...
    'LabelSource','foldernames');
imdsTest.ReadFcn = @customreader;
imdsTest1.ReadFcn = @customreader;
[YPred,scores] = classify(netTransfer,imdsTest);
YTest = imdsTest.Labels;
accuracy = mean(YPred == YTest)
[YPred,scores] = classify(netTransfer,imdsTest1);
YTest = imdsTest1.Labels;
accuracy = mean(YPred == YTest)

function data = customreader(filename)
data = imread(filename);
data = imresize(data,[224 224]);
if(size(data,3) == 1)
    data = cat(3,data,data,data);
end
end
